<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.CommentMapper">

    <sql id="selectFields">
        id, user_id,post_id, entity_type, entity_id, target_id, content, status, create_time,like_count
    </sql>

    <sql id="insertFields">
        user_id, post_id,entity_type, entity_id, target_id, content, status, create_time,like_count
    </sql>
    <update id="updateLikeCountById">
        update comment
        set like_count = #{likeCount}
        where id = #{id}
    </update>
    <update id="updatePostId">
        update comment
        set post_id = #{postId}
        where id = #{id}
    </update>
    <update id="updateStatus">
        update comment
        set status = #{status}
        where id = #{id}
    </update>


    <select id="selectCommentsByEntity" resultType="Comment">
        select
        <include refid="selectFields"></include>
        from comment
        where status = 0
        and entity_type = #{entityType}
        and entity_id = #{entityId}
        order by create_time asc
        limit #{offset}, #{limit}
    </select>

    <select id="selectCountByEntity" resultType="int">
        select count(id)
        from comment
        where status = 0
        and entity_type = #{entityType}
        and entity_id = #{entityId}
    </select>

    <insert id="insertComment" parameterType="Comment">
        insert into comment(<include refid="insertFields"></include>)
        values(#{userId},#{postId},#{entityType},#{entityId},#{targetId},#{content},#{status},#{createTime},#{likeCount})
    </insert>

    <select id="selectCommentById" resultType="Comment">
        select
        <include refid="selectFields"></include>
        from comment
        where id = #{id}
    </select>
    <select id="selectCommentByUserId" resultType="Comment">
        select
        <include refid="selectFields"></include>
        from comment
        where status = 0
        and user_id = #{userId}
        order by create_time asc
        limit #{offset}, #{limit}
    </select>
    <select id="selectCommentCountByUserId" resultType="java.lang.Integer">
        select count(id)
        from comment
        where status = 0
        and user_id = #{userId}
    </select>
    <select id="selectReplysByCommentId" resultType="Comment">
        select
        <include refid="selectFields"></include>
        from comment
        where status = 0
        and entity_type = 2
        and entity_id = #{commentId}
        order by create_time asc
        limit #{offset}, #{limit}
    </select>
    <select id="selectCommentsWithOrder" resultType="Comment">
        select
        <include refid="selectFields"></include>
        from comment
        where entity_type = #{entityType}
        and entity_id = #{entityId}
        <if test="orderMode==0">
            order by like_count desc, create_time desc,id desc
        </if>
        <if test="orderMode==1">
            order by create_time desc,id desc
        </if>
        <if test="orderMode==2">
            order by create_time asc,id desc
        </if>
        limit #{offset}, #{limit}
    </select>
    <select id="selectAllComments" resultType="Comment">
        select
        <include refid="selectFields"></include>
        from comment
    </select>
    <select id="selectCommentCountByPostId" resultType="java.lang.Integer">
        select count(id)
        from comment
        where post_id = #{postId}
    </select>

    <resultMap type="Comment" id="CommentMap">
        <result column="post_id" property="postId"/>
        <result column="max(create_time)" property="createTime"/>
    </resultMap>

    <select id="selectNewReply" resultMap="CommentMap">
        select post_id,max(create_time)
        from comment
        group by post_id
        order by max(create_time) desc
    </select>


</mapper>